type Activity {
  id: ID!
  name: String!
}

type Stratum {
  id: ID!
  name: String!
}

type ShopType {
  id: ID!
  name: String!
}

type Shop {
  id: ID!
  name: String!
  businessName: String
  activity: Activity
  stratum: Stratum
  address: String!
  phoneNumber: String
  email: String
  website: String
  shopType: ShopType
  lat: Float!
  long: Float!
  nearbyShops(
    limit: Int = 5
  ): [Shop!]!
  shopsInRadius(
    radius: Int = 50
  ): [Shop!]!
}

type Query {
  shop(id: ID): Shop
  shops(
    limit: Int = 50,
    offset: Int = 0
  ): [Shop!]!
  nearbyShops(
    limit: Int = 5
    lat: Float!
    long: Float!
  ): [Shop!]!
  shopsInRadius(
    radius: Int = 50 
    lat: Float!
    long: Float!
  ): [Shop!]!
}

input CreateShopInput {
  id: ID!
  name: String!
  businessName: String
  activity: String
  stratum: String
  address: String!
  phoneNumber: String
  email: String
  website: String
  shopType: String
  lat: Float!
  long: Float!
}

type CreateShopPayload {
  id: ID
}

type Mutation {
  createShop(input: CreateShopInput!): CreateShopPayload!
}

schema {
  query: Query
  mutation: Mutation
}

