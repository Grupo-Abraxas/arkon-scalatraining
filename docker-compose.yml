version: '3.8'

services:
  graphql:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: graphql
    ports:
      - "8080:8080"
    environment:
      MODULE: graphql
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - app_network

  ingest:
    restart: "no"
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ingest
    environment:
      MODULE: ingest
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - app_network
    entrypoint: ["sh", "-c", "wait-for-postgres.sh postgres && sbt ingest/run"]

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
